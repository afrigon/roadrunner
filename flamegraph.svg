<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>libdispatch.dylib`_dispatch_lane_invoke (14 samples, 0.13%)</title><rect x="0.1275%" y="741" width="0.1275%" height="15" fill="rgb(227,0,7)"/><text x="0.3775%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (14 samples, 0.13%)</title><rect x="0.1275%" y="725" width="0.1275%" height="15" fill="rgb(217,0,24)"/><text x="0.3775%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (27 samples, 0.25%)</title><rect x="0.0182%" y="789" width="0.2458%" height="15" fill="rgb(221,193,54)"/><text x="0.2682%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (21 samples, 0.19%)</title><rect x="0.0728%" y="773" width="0.1912%" height="15" fill="rgb(248,212,6)"/><text x="0.3228%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (15 samples, 0.14%)</title><rect x="0.1275%" y="757" width="0.1366%" height="15" fill="rgb(208,68,35)"/><text x="0.3775%" y="767.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (12 samples, 0.11%)</title><rect x="0.6737%" y="581" width="0.1092%" height="15" fill="rgb(232,128,0)"/><text x="0.9237%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (35 samples, 0.32%)</title><rect x="0.8194%" y="581" width="0.3186%" height="15" fill="rgb(207,160,47)"/><text x="1.0694%" y="591.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (57 samples, 0.52%)</title><rect x="0.6555%" y="597" width="0.5189%" height="15" fill="rgb(228,23,34)"/><text x="0.9055%" y="607.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (75 samples, 0.68%)</title><rect x="0.5280%" y="613" width="0.6828%" height="15" fill="rgb(218,30,26)"/><text x="0.7780%" y="623.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (80 samples, 0.73%)</title><rect x="0.5098%" y="629" width="0.7283%" height="15" fill="rgb(220,122,19)"/><text x="0.7598%" y="639.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (105 samples, 0.96%)</title><rect x="0.2913%" y="677" width="0.9559%" height="15" fill="rgb(250,228,42)"/><text x="0.5413%" y="687.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (100 samples, 0.91%)</title><rect x="0.3369%" y="661" width="0.9104%" height="15" fill="rgb(240,193,28)"/><text x="0.5869%" y="671.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (100 samples, 0.91%)</title><rect x="0.3369%" y="645" width="0.9104%" height="15" fill="rgb(216,20,37)"/><text x="0.5869%" y="655.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (106 samples, 0.97%)</title><rect x="0.2913%" y="709" width="0.9650%" height="15" fill="rgb(206,188,39)"/><text x="0.5413%" y="719.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (106 samples, 0.97%)</title><rect x="0.2913%" y="693" width="0.9650%" height="15" fill="rgb(217,207,13)"/><text x="0.5413%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (129 samples, 1.17%)</title><rect x="0.2640%" y="725" width="1.1744%" height="15" fill="rgb(231,73,38)"/><text x="0.5140%" y="735.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (19 samples, 0.17%)</title><rect x="1.2655%" y="709" width="0.1730%" height="15" fill="rgb(225,20,46)"/><text x="1.5155%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (15 samples, 0.14%)</title><rect x="1.3019%" y="693" width="0.1366%" height="15" fill="rgb(210,31,41)"/><text x="1.5519%" y="703.50"></text></g><g><title>AppKit`_NSEventThread (132 samples, 1.20%)</title><rect x="0.2640%" y="757" width="1.2017%" height="15" fill="rgb(221,200,47)"/><text x="0.5140%" y="767.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (132 samples, 1.20%)</title><rect x="0.2640%" y="741" width="1.2017%" height="15" fill="rgb(226,26,5)"/><text x="0.5140%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (178 samples, 1.62%)</title><rect x="1.5659%" y="645" width="1.6205%" height="15" fill="rgb(249,33,26)"/><text x="1.8159%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (187 samples, 1.70%)</title><rect x="1.5477%" y="661" width="1.7025%" height="15" fill="rgb(235,183,28)"/><text x="1.7977%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (123 samples, 1.12%)</title><rect x="3.2502%" y="661" width="1.1198%" height="15" fill="rgb(221,5,38)"/><text x="3.5002%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (121 samples, 1.10%)</title><rect x="3.2684%" y="645" width="1.1016%" height="15" fill="rgb(247,18,42)"/><text x="3.5184%" y="655.50"></text></g><g><title>roadrunner`&lt;math::random::noise::combined::CombinedNoise as noise::noise_fns::NoiseFn&lt;[i64 (85 samples, 0.77%)</title><rect x="4.4883%" y="597" width="0.7739%" height="15" fill="rgb(241,131,45)"/><text x="4.7383%" y="607.50"></text></g><g><title> 2]&gt;&gt;::get (85 samples, 0.77%)</title><rect x="4.4883%" y="581" width="0.7739%" height="15" fill="rgb(249,31,29)"/><text x="4.7383%" y="591.50"></text></g><g><title>roadrunner`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;[f64 (58 samples, 0.53%)</title><rect x="4.7342%" y="565" width="0.5280%" height="15" fill="rgb(225,111,53)"/><text x="4.9842%" y="575.50"></text></g><g><title> 2]&gt;&gt;::get (58 samples, 0.53%)</title><rect x="4.7342%" y="549" width="0.5280%" height="15" fill="rgb(238,160,17)"/><text x="4.9842%" y="559.50"></text></g><g><title>roadrunner`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (87 samples, 0.79%)</title><rect x="4.4792%" y="613" width="0.7921%" height="15" fill="rgb(214,148,48)"/><text x="4.7292%" y="623.50"></text></g><g><title>roadrunner`alloc::vec::Vec&lt;T&gt;::extend_with (15 samples, 0.14%)</title><rect x="5.2713%" y="613" width="0.1366%" height="15" fill="rgb(232,36,49)"/><text x="5.5213%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (14 samples, 0.13%)</title><rect x="5.2804%" y="597" width="0.1275%" height="15" fill="rgb(209,103,24)"/><text x="5.5304%" y="607.50"></text></g><g><title>roadrunner`core::world::generation::generator::generate_chunk (128 samples, 1.17%)</title><rect x="4.3791%" y="629" width="1.1653%" height="15" fill="rgb(229,88,8)"/><text x="4.6291%" y="639.50"></text></g><g><title>roadrunner`&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (130 samples, 1.18%)</title><rect x="4.3700%" y="661" width="1.1835%" height="15" fill="rgb(213,181,19)"/><text x="4.6200%" y="671.50"></text></g><g><title>roadrunner`core::ops::function::FnOnce::call_once{{vtable.shim}} (129 samples, 1.17%)</title><rect x="4.3791%" y="645" width="1.1744%" height="15" fill="rgb(254,191,54)"/><text x="4.6291%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (633 samples, 5.76%)</title><rect x="0.2640%" y="789" width="5.7629%" height="15" fill="rgb(241,83,37)"/><text x="0.5140%" y="799.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (633 samples, 5.76%)</title><rect x="0.2640%" y="773" width="5.7629%" height="15" fill="rgb(233,36,39)"/><text x="0.5140%" y="783.50">libsyst..</text></g><g><title>roadrunner`std::sys::unix::thread::Thread::new::thread_start (501 samples, 4.56%)</title><rect x="1.4658%" y="757" width="4.5612%" height="15" fill="rgb(226,3,54)"/><text x="1.7158%" y="767.50">roadr..</text></g><g><title>roadrunner`&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (501 samples, 4.56%)</title><rect x="1.4658%" y="741" width="4.5612%" height="15" fill="rgb(245,192,40)"/><text x="1.7158%" y="751.50">roadr..</text></g><g><title>roadrunner`core::ops::function::FnOnce::call_once{{vtable.shim}} (501 samples, 4.56%)</title><rect x="1.4658%" y="725" width="4.5612%" height="15" fill="rgb(238,167,29)"/><text x="1.7158%" y="735.50">roadr..</text></g><g><title>roadrunner`__rust_maybe_catch_panic (501 samples, 4.56%)</title><rect x="1.4658%" y="709" width="4.5612%" height="15" fill="rgb(232,182,51)"/><text x="1.7158%" y="719.50">roadr..</text></g><g><title>roadrunner`std::sys_common::backtrace::__rust_begin_short_backtrace (501 samples, 4.56%)</title><rect x="1.4658%" y="693" width="4.5612%" height="15" fill="rgb(231,60,39)"/><text x="1.7158%" y="703.50">roadr..</text></g><g><title>roadrunner`core::utils::threadpool::ThreadPool::new::_{{closure}} (497 samples, 4.52%)</title><rect x="1.5022%" y="677" width="4.5248%" height="15" fill="rgb(208,69,12)"/><text x="1.7522%" y="687.50">roadr..</text></g><g><title>roadrunner`std::sync::mpsc::Receiver&lt;T&gt;::recv (50 samples, 0.46%)</title><rect x="5.5717%" y="661" width="0.4552%" height="15" fill="rgb(235,93,37)"/><text x="5.8217%" y="671.50"></text></g><g><title>roadrunner`std::sync::mpsc::stream::Packet&lt;T&gt;::recv (48 samples, 0.44%)</title><rect x="5.5899%" y="645" width="0.4370%" height="15" fill="rgb(213,116,39)"/><text x="5.8399%" y="655.50"></text></g><g><title>roadrunner`std::sync::mpsc::stream::Packet&lt;T&gt;::try_recv (42 samples, 0.38%)</title><rect x="5.6446%" y="629" width="0.3824%" height="15" fill="rgb(222,207,29)"/><text x="5.8946%" y="639.50"></text></g><g><title>roadrunner`roadrunner::game::game::Game::new (11 samples, 0.10%)</title><rect x="6.0269%" y="661" width="0.1001%" height="15" fill="rgb(206,96,30)"/><text x="6.2769%" y="671.50"></text></g><g><title>roadrunner`roadrunner::render::renderer::renderer::Renderer::new (11 samples, 0.10%)</title><rect x="6.0269%" y="645" width="0.1001%" height="15" fill="rgb(218,138,4)"/><text x="6.2769%" y="655.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (12 samples, 0.11%)</title><rect x="6.4639%" y="373" width="0.1092%" height="15" fill="rgb(250,191,14)"/><text x="6.7139%" y="383.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (12 samples, 0.11%)</title><rect x="6.4639%" y="357" width="0.1092%" height="15" fill="rgb(239,60,40)"/><text x="6.7139%" y="367.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (12 samples, 0.11%)</title><rect x="6.4639%" y="341" width="0.1092%" height="15" fill="rgb(206,27,48)"/><text x="6.7139%" y="351.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (12 samples, 0.11%)</title><rect x="6.4639%" y="325" width="0.1092%" height="15" fill="rgb(225,35,8)"/><text x="6.7139%" y="335.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (12 samples, 0.11%)</title><rect x="6.4639%" y="309" width="0.1092%" height="15" fill="rgb(250,213,24)"/><text x="6.7139%" y="319.50"></text></g><g><title>AppKit`-[NSButtonCell init] (11 samples, 0.10%)</title><rect x="6.4731%" y="293" width="0.1001%" height="15" fill="rgb(247,123,22)"/><text x="6.7231%" y="303.50"></text></g><g><title>AppKit`-[NSThemeFrame _moveTitlebarViewsToView:] (17 samples, 0.15%)</title><rect x="6.4275%" y="485" width="0.1548%" height="15" fill="rgb(231,138,38)"/><text x="6.6775%" y="495.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (17 samples, 0.15%)</title><rect x="6.4275%" y="469" width="0.1548%" height="15" fill="rgb(231,145,46)"/><text x="6.6775%" y="479.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (17 samples, 0.15%)</title><rect x="6.4275%" y="453" width="0.1548%" height="15" fill="rgb(251,118,11)"/><text x="6.6775%" y="463.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (17 samples, 0.15%)</title><rect x="6.4275%" y="437" width="0.1548%" height="15" fill="rgb(217,147,25)"/><text x="6.6775%" y="447.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (17 samples, 0.15%)</title><rect x="6.4275%" y="421" width="0.1548%" height="15" fill="rgb(247,81,37)"/><text x="6.6775%" y="431.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (17 samples, 0.15%)</title><rect x="6.4275%" y="405" width="0.1548%" height="15" fill="rgb(209,12,38)"/><text x="6.6775%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (17 samples, 0.15%)</title><rect x="6.4275%" y="389" width="0.1548%" height="15" fill="rgb(227,1,9)"/><text x="6.6775%" y="399.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (24 samples, 0.22%)</title><rect x="6.4184%" y="533" width="0.2185%" height="15" fill="rgb(248,47,43)"/><text x="6.6684%" y="543.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (24 samples, 0.22%)</title><rect x="6.4184%" y="517" width="0.2185%" height="15" fill="rgb(221,10,30)"/><text x="6.6684%" y="527.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (24 samples, 0.22%)</title><rect x="6.4184%" y="501" width="0.2185%" height="15" fill="rgb(210,229,1)"/><text x="6.6684%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (30 samples, 0.27%)</title><rect x="6.3820%" y="549" width="0.2731%" height="15" fill="rgb(222,148,37)"/><text x="6.6320%" y="559.50"></text></g><g><title>roadrunner`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (34 samples, 0.31%)</title><rect x="6.3638%" y="613" width="0.3095%" height="15" fill="rgb(234,67,33)"/><text x="6.6138%" y="623.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (34 samples, 0.31%)</title><rect x="6.3638%" y="597" width="0.3095%" height="15" fill="rgb(247,98,35)"/><text x="6.6138%" y="607.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (34 samples, 0.31%)</title><rect x="6.3638%" y="581" width="0.3095%" height="15" fill="rgb(247,138,52)"/><text x="6.6138%" y="591.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (32 samples, 0.29%)</title><rect x="6.3820%" y="565" width="0.2913%" height="15" fill="rgb(213,79,30)"/><text x="6.6320%" y="575.50"></text></g><g><title>roadrunner`roadrunner::render::display::display::Display::new (62 samples, 0.56%)</title><rect x="6.1271%" y="661" width="0.5645%" height="15" fill="rgb(246,177,23)"/><text x="6.3771%" y="671.50"></text></g><g><title>roadrunner`glutin::windowed::_&lt;impl glutin::ContextBuilder&lt;T&gt;&gt;::build_windowed (59 samples, 0.54%)</title><rect x="6.1544%" y="645" width="0.5371%" height="15" fill="rgb(230,62,27)"/><text x="6.4044%" y="655.50"></text></g><g><title>roadrunner`winit::platform_impl::platform::window::UnownedWindow::new (44 samples, 0.40%)</title><rect x="6.2910%" y="629" width="0.4006%" height="15" fill="rgb(216,154,8)"/><text x="6.5410%" y="639.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (28 samples, 0.25%)</title><rect x="6.6916%" y="629" width="0.2549%" height="15" fill="rgb(244,35,45)"/><text x="6.9416%" y="639.50"></text></g><g><title>AppKit`-[NSApplication init] (28 samples, 0.25%)</title><rect x="6.6916%" y="613" width="0.2549%" height="15" fill="rgb(251,115,12)"/><text x="6.9416%" y="623.50"></text></g><g><title>roadrunner`winit::event_loop::EventLoop&lt;()&gt;::new (33 samples, 0.30%)</title><rect x="6.6916%" y="661" width="0.3004%" height="15" fill="rgb(240,54,50)"/><text x="6.9416%" y="671.50"></text></g><g><title>roadrunner`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (33 samples, 0.30%)</title><rect x="6.6916%" y="645" width="0.3004%" height="15" fill="rgb(233,84,52)"/><text x="6.9416%" y="655.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (12 samples, 0.11%)</title><rect x="7.0193%" y="581" width="0.1092%" height="15" fill="rgb(207,117,47)"/><text x="7.2693%" y="591.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (12 samples, 0.11%)</title><rect x="7.0193%" y="565" width="0.1092%" height="15" fill="rgb(249,43,39)"/><text x="7.2693%" y="575.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (12 samples, 0.11%)</title><rect x="7.0193%" y="549" width="0.1092%" height="15" fill="rgb(209,38,44)"/><text x="7.2693%" y="559.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (12 samples, 0.11%)</title><rect x="7.0193%" y="533" width="0.1092%" height="15" fill="rgb(236,212,23)"/><text x="7.2693%" y="543.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (12 samples, 0.11%)</title><rect x="7.0193%" y="517" width="0.1092%" height="15" fill="rgb(242,79,21)"/><text x="7.2693%" y="527.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (12 samples, 0.11%)</title><rect x="7.0193%" y="501" width="0.1092%" height="15" fill="rgb(211,96,35)"/><text x="7.2693%" y="511.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (12 samples, 0.11%)</title><rect x="7.0193%" y="485" width="0.1092%" height="15" fill="rgb(253,215,40)"/><text x="7.2693%" y="495.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (11 samples, 0.10%)</title><rect x="7.0284%" y="469" width="0.1001%" height="15" fill="rgb(211,81,21)"/><text x="7.2784%" y="479.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (11 samples, 0.10%)</title><rect x="7.0284%" y="453" width="0.1001%" height="15" fill="rgb(208,190,38)"/><text x="7.2784%" y="463.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (11 samples, 0.10%)</title><rect x="7.0284%" y="437" width="0.1001%" height="15" fill="rgb(235,213,38)"/><text x="7.2784%" y="447.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (11 samples, 0.10%)</title><rect x="7.0284%" y="421" width="0.1001%" height="15" fill="rgb(237,122,38)"/><text x="7.2784%" y="431.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (11 samples, 0.10%)</title><rect x="7.0284%" y="405" width="0.1001%" height="15" fill="rgb(244,218,35)"/><text x="7.2784%" y="415.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (23 samples, 0.21%)</title><rect x="7.0193%" y="597" width="0.2094%" height="15" fill="rgb(240,68,47)"/><text x="7.2693%" y="607.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithRenderer (19 samples, 0.17%)</title><rect x="7.3471%" y="149" width="0.1730%" height="15" fill="rgb(210,16,53)"/><text x="7.5971%" y="159.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithOptions (19 samples, 0.17%)</title><rect x="7.3471%" y="133" width="0.1730%" height="15" fill="rgb(235,124,12)"/><text x="7.5971%" y="143.50"></text></g><g><title>CoreUI`CUIDraw (19 samples, 0.17%)</title><rect x="7.3471%" y="117" width="0.1730%" height="15" fill="rgb(224,169,11)"/><text x="7.5971%" y="127.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (19 samples, 0.17%)</title><rect x="7.3471%" y="101" width="0.1730%" height="15" fill="rgb(250,166,2)"/><text x="7.5971%" y="111.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawMenuTitle (19 samples, 0.17%)</title><rect x="7.3471%" y="85" width="0.1730%" height="15" fill="rgb(242,216,29)"/><text x="7.5971%" y="95.50"></text></g><g><title>CoreUI`CUIRenderer::DrawImage (18 samples, 0.16%)</title><rect x="7.3562%" y="69" width="0.1639%" height="15" fill="rgb(230,116,27)"/><text x="7.6062%" y="79.50"></text></g><g><title>CoreUI`CUIRenderer::CreateImage (16 samples, 0.15%)</title><rect x="7.3744%" y="53" width="0.1457%" height="15" fill="rgb(228,99,48)"/><text x="7.6244%" y="63.50"></text></g><g><title>CoreUI`CUIRenderer::CreateImageByApplyingEffectsToImage (16 samples, 0.15%)</title><rect x="7.3744%" y="37" width="0.1457%" height="15" fill="rgb(253,11,6)"/><text x="7.6244%" y="47.50"></text></g><g><title>HIToolbox`HIView::Render (29 samples, 0.26%)</title><rect x="7.2651%" y="357" width="0.2640%" height="15" fill="rgb(247,143,39)"/><text x="7.5151%" y="367.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (29 samples, 0.26%)</title><rect x="7.2651%" y="341" width="0.2640%" height="15" fill="rgb(236,97,10)"/><text x="7.5151%" y="351.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (29 samples, 0.26%)</title><rect x="7.2651%" y="325" width="0.2640%" height="15" fill="rgb(233,208,19)"/><text x="7.5151%" y="335.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (29 samples, 0.26%)</title><rect x="7.2651%" y="309" width="0.2640%" height="15" fill="rgb(216,164,2)"/><text x="7.5151%" y="319.50"></text></g><g><title>HIToolbox`HIView::SendDraw (29 samples, 0.26%)</title><rect x="7.2651%" y="293" width="0.2640%" height="15" fill="rgb(220,129,5)"/><text x="7.5151%" y="303.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (29 samples, 0.26%)</title><rect x="7.2651%" y="277" width="0.2640%" height="15" fill="rgb(242,17,10)"/><text x="7.5151%" y="287.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (29 samples, 0.26%)</title><rect x="7.2651%" y="261" width="0.2640%" height="15" fill="rgb(242,107,0)"/><text x="7.5151%" y="271.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (29 samples, 0.26%)</title><rect x="7.2651%" y="245" width="0.2640%" height="15" fill="rgb(251,28,31)"/><text x="7.5151%" y="255.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (29 samples, 0.26%)</title><rect x="7.2651%" y="229" width="0.2640%" height="15" fill="rgb(233,223,10)"/><text x="7.5151%" y="239.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawWithoutCustomization (29 samples, 0.26%)</title><rect x="7.2651%" y="213" width="0.2640%" height="15" fill="rgb(215,21,27)"/><text x="7.5151%" y="223.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (29 samples, 0.26%)</title><rect x="7.2651%" y="197" width="0.2640%" height="15" fill="rgb(232,23,21)"/><text x="7.5151%" y="207.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (26 samples, 0.24%)</title><rect x="7.2924%" y="181" width="0.2367%" height="15" fill="rgb(244,5,23)"/><text x="7.5424%" y="191.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (20 samples, 0.18%)</title><rect x="7.3471%" y="165" width="0.1821%" height="15" fill="rgb(226,81,46)"/><text x="7.5971%" y="175.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (30 samples, 0.27%)</title><rect x="7.2651%" y="453" width="0.2731%" height="15" fill="rgb(247,70,30)"/><text x="7.5151%" y="463.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (30 samples, 0.27%)</title><rect x="7.2651%" y="437" width="0.2731%" height="15" fill="rgb(212,68,19)"/><text x="7.5151%" y="447.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (30 samples, 0.27%)</title><rect x="7.2651%" y="421" width="0.2731%" height="15" fill="rgb(240,187,13)"/><text x="7.5151%" y="431.50"></text></g><g><title>HIToolbox`ShowHide (30 samples, 0.27%)</title><rect x="7.2651%" y="405" width="0.2731%" height="15" fill="rgb(223,113,26)"/><text x="7.5151%" y="415.50"></text></g><g><title>HIToolbox`_ShowHideWindows (30 samples, 0.27%)</title><rect x="7.2651%" y="389" width="0.2731%" height="15" fill="rgb(206,192,2)"/><text x="7.5151%" y="399.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (30 samples, 0.27%)</title><rect x="7.2651%" y="373" width="0.2731%" height="15" fill="rgb(241,108,4)"/><text x="7.5151%" y="383.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (31 samples, 0.28%)</title><rect x="7.2651%" y="549" width="0.2822%" height="15" fill="rgb(247,173,49)"/><text x="7.5151%" y="559.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (31 samples, 0.28%)</title><rect x="7.2651%" y="533" width="0.2822%" height="15" fill="rgb(224,114,35)"/><text x="7.5151%" y="543.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (31 samples, 0.28%)</title><rect x="7.2651%" y="517" width="0.2822%" height="15" fill="rgb(245,159,27)"/><text x="7.5151%" y="527.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (31 samples, 0.28%)</title><rect x="7.2651%" y="501" width="0.2822%" height="15" fill="rgb(245,172,44)"/><text x="7.5151%" y="511.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (31 samples, 0.28%)</title><rect x="7.2651%" y="485" width="0.2822%" height="15" fill="rgb(236,23,11)"/><text x="7.5151%" y="495.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (31 samples, 0.28%)</title><rect x="7.2651%" y="469" width="0.2822%" height="15" fill="rgb(205,117,38)"/><text x="7.5151%" y="479.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (14 samples, 0.13%)</title><rect x="7.6475%" y="501" width="0.1275%" height="15" fill="rgb(237,72,25)"/><text x="7.8975%" y="511.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (12 samples, 0.11%)</title><rect x="7.6657%" y="485" width="0.1092%" height="15" fill="rgb(244,70,9)"/><text x="7.9157%" y="495.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke.llvm.16397370698269480189 (12 samples, 0.11%)</title><rect x="7.7749%" y="469" width="0.1092%" height="15" fill="rgb(217,125,39)"/><text x="8.0249%" y="479.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke.1562 (12 samples, 0.11%)</title><rect x="7.7749%" y="453" width="0.1092%" height="15" fill="rgb(235,36,10)"/><text x="8.0249%" y="463.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (12 samples, 0.11%)</title><rect x="7.7749%" y="437" width="0.1092%" height="15" fill="rgb(251,123,47)"/><text x="8.0249%" y="447.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (17 samples, 0.15%)</title><rect x="7.8933%" y="405" width="0.1548%" height="15" fill="rgb(221,13,13)"/><text x="8.1433%" y="415.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (11 samples, 0.10%)</title><rect x="7.9479%" y="389" width="0.1001%" height="15" fill="rgb(238,131,9)"/><text x="8.1979%" y="399.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (11 samples, 0.10%)</title><rect x="7.9479%" y="373" width="0.1001%" height="15" fill="rgb(211,50,8)"/><text x="8.1979%" y="383.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (22 samples, 0.20%)</title><rect x="7.8842%" y="421" width="0.2003%" height="15" fill="rgb(245,182,24)"/><text x="8.1342%" y="431.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (38 samples, 0.35%)</title><rect x="7.8842%" y="469" width="0.3460%" height="15" fill="rgb(242,14,37)"/><text x="8.1342%" y="479.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (38 samples, 0.35%)</title><rect x="7.8842%" y="453" width="0.3460%" height="15" fill="rgb(246,228,12)"/><text x="8.1342%" y="463.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (38 samples, 0.35%)</title><rect x="7.8842%" y="437" width="0.3460%" height="15" fill="rgb(213,55,15)"/><text x="8.1342%" y="447.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (16 samples, 0.15%)</title><rect x="8.0845%" y="421" width="0.1457%" height="15" fill="rgb(209,9,3)"/><text x="8.3345%" y="431.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (16 samples, 0.15%)</title><rect x="8.0845%" y="405" width="0.1457%" height="15" fill="rgb(230,59,30)"/><text x="8.3345%" y="415.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (16 samples, 0.15%)</title><rect x="8.0845%" y="389" width="0.1457%" height="15" fill="rgb(209,121,21)"/><text x="8.3345%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`sched_yield (21 samples, 0.19%)</title><rect x="8.3030%" y="405" width="0.1912%" height="15" fill="rgb(220,109,13)"/><text x="8.5530%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (16 samples, 0.15%)</title><rect x="8.6945%" y="389" width="0.1457%" height="15" fill="rgb(232,18,1)"/><text x="8.9445%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1,799 samples, 16.38%)</title><rect x="8.8401%" y="389" width="16.3784%" height="15" fill="rgb(215,41,42)"/><text x="9.0901%" y="399.50">libsystem_kernel.dylib`sw..</text></g><g><title>libsystem_pthread.dylib`sched_yield (48 samples, 0.44%)</title><rect x="25.2185%" y="389" width="0.4370%" height="15" fill="rgb(224,123,36)"/><text x="25.4685%" y="399.50"></text></g><g><title>roadrunner`core::utils::spin_sleep::sleep (2,220 samples, 20.21%)</title><rect x="8.4942%" y="405" width="20.2112%" height="15" fill="rgb(240,125,3)"/><text x="8.7442%" y="415.50">roadrunner`core::utils::spin_sle..</text></g><g><title>roadrunner`std::time::Instant::elapsed (331 samples, 3.01%)</title><rect x="25.6919%" y="389" width="3.0135%" height="15" fill="rgb(205,98,50)"/><text x="25.9419%" y="399.50">roa..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (135 samples, 1.23%)</title><rect x="27.4763%" y="373" width="1.2291%" height="15" fill="rgb(205,185,37)"/><text x="27.7263%" y="383.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`intelSubmitCommands (41 samples, 0.37%)</title><rect x="28.7509%" y="293" width="0.3733%" height="15" fill="rgb(238,207,15)"/><text x="29.0009%" y="303.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`IntelCommandBuffer::getNew (41 samples, 0.37%)</title><rect x="28.7509%" y="277" width="0.3733%" height="15" fill="rgb(213,199,42)"/><text x="29.0009%" y="287.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (41 samples, 0.37%)</title><rect x="28.7509%" y="261" width="0.3733%" height="15" fill="rgb(235,201,11)"/><text x="29.0009%" y="271.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (41 samples, 0.37%)</title><rect x="28.7509%" y="245" width="0.3733%" height="15" fill="rgb(207,46,11)"/><text x="29.0009%" y="255.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (40 samples, 0.36%)</title><rect x="28.7600%" y="229" width="0.3642%" height="15" fill="rgb(241,35,35)"/><text x="29.0100%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (40 samples, 0.36%)</title><rect x="28.7600%" y="213" width="0.3642%" height="15" fill="rgb(243,32,47)"/><text x="29.0100%" y="223.50"></text></g><g><title>IOKit`io_connect_method (40 samples, 0.36%)</title><rect x="28.7600%" y="197" width="0.3642%" height="15" fill="rgb(247,202,23)"/><text x="29.0100%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (40 samples, 0.36%)</title><rect x="28.7600%" y="181" width="0.3642%" height="15" fill="rgb(219,102,11)"/><text x="29.0100%" y="191.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (17 samples, 0.15%)</title><rect x="29.1879%" y="293" width="0.1548%" height="15" fill="rgb(243,110,44)"/><text x="29.4379%" y="303.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (11 samples, 0.10%)</title><rect x="29.2425%" y="277" width="0.1001%" height="15" fill="rgb(222,74,54)"/><text x="29.4925%" y="287.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (90 samples, 0.82%)</title><rect x="28.7327%" y="309" width="0.8194%" height="15" fill="rgb(216,99,12)"/><text x="28.9827%" y="319.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (14 samples, 0.13%)</title><rect x="29.7160%" y="309" width="0.1275%" height="15" fill="rgb(226,22,26)"/><text x="29.9660%" y="319.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (141 samples, 1.28%)</title><rect x="28.7327%" y="325" width="1.2837%" height="15" fill="rgb(217,163,10)"/><text x="28.9827%" y="335.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (150 samples, 1.37%)</title><rect x="28.7145%" y="341" width="1.3656%" height="15" fill="rgb(213,25,53)"/><text x="28.9645%" y="351.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (240 samples, 2.18%)</title><rect x="30.1165%" y="261" width="2.1850%" height="15" fill="rgb(252,105,26)"/><text x="30.3665%" y="271.50">I..</text></g><g><title>IOKit`IOConnectCallMethod (240 samples, 2.18%)</title><rect x="30.1165%" y="245" width="2.1850%" height="15" fill="rgb(220,39,43)"/><text x="30.3665%" y="255.50">I..</text></g><g><title>IOKit`io_connect_method (240 samples, 2.18%)</title><rect x="30.1165%" y="229" width="2.1850%" height="15" fill="rgb(229,68,48)"/><text x="30.3665%" y="239.50">I..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (240 samples, 2.18%)</title><rect x="30.1165%" y="213" width="2.1850%" height="15" fill="rgb(252,8,32)"/><text x="30.3665%" y="223.50">l..</text></g><g><title>AppleIntelSKLGraphicsGLDriver`intelSubmitCommands (245 samples, 2.23%)</title><rect x="30.0801%" y="325" width="2.2305%" height="15" fill="rgb(223,20,43)"/><text x="30.3301%" y="335.50">A..</text></g><g><title>AppleIntelSKLGraphicsGLDriver`IntelCommandBuffer::getNew (245 samples, 2.23%)</title><rect x="30.0801%" y="309" width="2.2305%" height="15" fill="rgb(229,81,49)"/><text x="30.3301%" y="319.50">A..</text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (244 samples, 2.22%)</title><rect x="30.0892%" y="293" width="2.2214%" height="15" fill="rgb(236,28,36)"/><text x="30.3392%" y="303.50">l..</text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (242 samples, 2.20%)</title><rect x="30.1074%" y="277" width="2.2032%" height="15" fill="rgb(249,185,26)"/><text x="30.3574%" y="287.50">I..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (15 samples, 0.14%)</title><rect x="32.3471%" y="309" width="0.1366%" height="15" fill="rgb(249,174,33)"/><text x="32.5971%" y="319.50"></text></g><g><title>SkyLight`SLSFlushSurfaceWithOptionsAndIndex (20 samples, 0.18%)</title><rect x="32.3197%" y="325" width="0.1821%" height="15" fill="rgb(233,201,37)"/><text x="32.5697%" y="335.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`gldPresentFramebufferData (267 samples, 2.43%)</title><rect x="30.0801%" y="341" width="2.4308%" height="15" fill="rgb(221,78,26)"/><text x="30.3301%" y="351.50">Ap..</text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (419 samples, 3.81%)</title><rect x="28.7054%" y="389" width="3.8146%" height="15" fill="rgb(250,127,30)"/><text x="28.9554%" y="399.50">AppK..</text></g><g><title>OpenGL`CGLFlushDrawable (419 samples, 3.81%)</title><rect x="28.7054%" y="373" width="3.8146%" height="15" fill="rgb(230,49,44)"/><text x="28.9554%" y="383.50">Open..</text></g><g><title>GLEngine`glSwap_Exec (419 samples, 3.81%)</title><rect x="28.7054%" y="357" width="3.8146%" height="15" fill="rgb(229,67,23)"/><text x="28.9554%" y="367.50">GLEn..</text></g><g><title>roadrunner`glutin::windowed::ContextWrapper&lt;glutin::context::PossiblyCurrent,W&gt;::swap_buffers (420 samples, 3.82%)</title><rect x="28.7054%" y="405" width="3.8237%" height="15" fill="rgb(249,83,47)"/><text x="28.9554%" y="415.50">road..</text></g><g><title>AppleIntelSKLGraphicsGLDriver`gldClearFramebufferData (13 samples, 0.12%)</title><rect x="32.5473%" y="373" width="0.1184%" height="15" fill="rgb(215,43,3)"/><text x="32.7973%" y="383.50"></text></g><g><title>GLEngine`glClear_Exec (21 samples, 0.19%)</title><rect x="32.5473%" y="389" width="0.1912%" height="15" fill="rgb(238,154,13)"/><text x="32.7973%" y="399.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`gpusLoadCurrentPipelinePrograms (14 samples, 0.13%)</title><rect x="32.8569%" y="309" width="0.1275%" height="15" fill="rgb(219,56,2)"/><text x="33.1069%" y="319.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`intelUpdateCtxSysProgramCommon(GLDContextRec*, GLDProgramRec*, GLDPipelineProgramRec*, void*, ShaderInfoCacheRec*, unsigned int) (13 samples, 0.12%)</title><rect x="32.8660%" y="293" width="0.1184%" height="15" fill="rgb(233,0,4)"/><text x="33.1160%" y="303.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`USC::IM_Shader::Compile (12 samples, 0.11%)</title><rect x="32.8751%" y="277" width="0.1092%" height="15" fill="rgb(235,30,7)"/><text x="33.1251%" y="287.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`updateDispatch (15 samples, 0.14%)</title><rect x="32.8569%" y="325" width="0.1366%" height="15" fill="rgb(250,79,13)"/><text x="33.1069%" y="335.50"></text></g><g><title>roadrunner`roadrunner::render::post::pipeline::PostProcessingPipeline::apply (27 samples, 0.25%)</title><rect x="32.7567%" y="389" width="0.2458%" height="15" fill="rgb(211,146,34)"/><text x="33.0067%" y="399.50"></text></g><g><title>GLEngine`glDrawElements_GL3Exec (20 samples, 0.18%)</title><rect x="32.8205%" y="373" width="0.1821%" height="15" fill="rgb(228,22,38)"/><text x="33.0705%" y="383.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (17 samples, 0.15%)</title><rect x="32.8478%" y="357" width="0.1548%" height="15" fill="rgb(235,168,5)"/><text x="33.0978%" y="367.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (17 samples, 0.15%)</title><rect x="32.8478%" y="341" width="0.1548%" height="15" fill="rgb(221,155,16)"/><text x="33.0978%" y="351.50"></text></g><g><title>GLEngine`gleLookupHashObject (25 samples, 0.23%)</title><rect x="33.0663%" y="341" width="0.2276%" height="15" fill="rgb(215,215,53)"/><text x="33.3163%" y="351.50"></text></g><g><title>GLEngine`glBindVertexArray_Exec (51 samples, 0.46%)</title><rect x="33.0299%" y="373" width="0.4643%" height="15" fill="rgb(223,4,10)"/><text x="33.2799%" y="383.50"></text></g><g><title>GLEngine`gleBindVertexArray (50 samples, 0.46%)</title><rect x="33.0390%" y="357" width="0.4552%" height="15" fill="rgb(234,103,6)"/><text x="33.2890%" y="367.50"></text></g><g><title>GLEngine`gleSetCurrentVertexHashObject (22 samples, 0.20%)</title><rect x="33.2939%" y="341" width="0.2003%" height="15" fill="rgb(227,97,0)"/><text x="33.5439%" y="351.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`GenContext::CheckOOM (126 samples, 1.15%)</title><rect x="33.7673%" y="325" width="1.1471%" height="15" fill="rgb(234,150,53)"/><text x="34.0173%" y="335.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`GenContext::CheckOOM (125 samples, 1.14%)</title><rect x="33.7764%" y="309" width="1.1380%" height="15" fill="rgb(228,201,54)"/><text x="34.0264%" y="319.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`intelSubmitCommands (114 samples, 1.04%)</title><rect x="33.8765%" y="293" width="1.0379%" height="15" fill="rgb(222,22,37)"/><text x="34.1265%" y="303.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`IntelCommandBuffer::getNew (114 samples, 1.04%)</title><rect x="33.8765%" y="277" width="1.0379%" height="15" fill="rgb(237,53,32)"/><text x="34.1265%" y="287.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (114 samples, 1.04%)</title><rect x="33.8765%" y="261" width="1.0379%" height="15" fill="rgb(233,25,53)"/><text x="34.1265%" y="271.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (113 samples, 1.03%)</title><rect x="33.8857%" y="245" width="1.0288%" height="15" fill="rgb(210,40,34)"/><text x="34.1357%" y="255.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (113 samples, 1.03%)</title><rect x="33.8857%" y="229" width="1.0288%" height="15" fill="rgb(241,220,44)"/><text x="34.1357%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (113 samples, 1.03%)</title><rect x="33.8857%" y="213" width="1.0288%" height="15" fill="rgb(235,28,35)"/><text x="34.1357%" y="223.50"></text></g><g><title>IOKit`io_connect_method (113 samples, 1.03%)</title><rect x="33.8857%" y="197" width="1.0288%" height="15" fill="rgb(210,56,17)"/><text x="34.1357%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (113 samples, 1.03%)</title><rect x="33.8857%" y="181" width="1.0288%" height="15" fill="rgb(224,130,29)"/><text x="34.1357%" y="191.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`GenContext::ProgramPipeline (172 samples, 1.57%)</title><rect x="33.6034%" y="341" width="1.5659%" height="15" fill="rgb(235,212,8)"/><text x="33.8534%" y="351.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`IntelVertexState::submitIndexBuffer (19 samples, 0.17%)</title><rect x="35.1693%" y="341" width="0.1730%" height="15" fill="rgb(223,33,50)"/><text x="35.4193%" y="351.50"></text></g><g><title>IOAccelerator`IOAccelContextAddResource (17 samples, 0.15%)</title><rect x="35.1875%" y="325" width="0.1548%" height="15" fill="rgb(219,149,13)"/><text x="35.4375%" y="335.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`IntelVertexArray::getSubmissionTokenArgs (34 samples, 0.31%)</title><rect x="35.5426%" y="325" width="0.3095%" height="15" fill="rgb(250,156,29)"/><text x="35.7926%" y="335.50"></text></g><g><title>IOAccelerator`IOAccelContextAddResource (33 samples, 0.30%)</title><rect x="35.5517%" y="309" width="0.3004%" height="15" fill="rgb(216,193,19)"/><text x="35.8017%" y="319.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`IntelVertexState::submitVboBuffers (57 samples, 0.52%)</title><rect x="35.3423%" y="341" width="0.5189%" height="15" fill="rgb(216,135,14)"/><text x="35.5923%" y="351.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`glrIntelRenderVertexArray (251 samples, 2.29%)</title><rect x="33.5852%" y="357" width="2.2851%" height="15" fill="rgb(241,47,5)"/><text x="33.8352%" y="367.50">A..</text></g><g><title>AppleIntelSKLGraphicsGLDriver`IntelVertexState::prepareVboPath (12 samples, 0.11%)</title><rect x="35.9341%" y="309" width="0.1092%" height="15" fill="rgb(233,42,35)"/><text x="36.1841%" y="319.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`IGC::CodeGen (13 samples, 0.12%)</title><rect x="36.0615%" y="213" width="0.1184%" height="15" fill="rgb(231,13,6)"/><text x="36.3115%" y="223.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`IGC::CodeGen(IGC::PixelShaderContext*, llvm::MapVector&lt;llvm::Function*, IGC::CShaderProgram*, llvm::DenseMap&lt;llvm::Function*, unsigned int, llvm::DenseMapInfo&lt;llvm::Function*&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, unsigned int&gt; &gt;, std::__1::vector&lt;std::__1::pair&lt;llvm::Function*, IGC::CShaderProgram*&gt;, std::__1::allocator&lt;std::__1::pair (13 samples, 0.12%)</title><rect x="36.0615%" y="197" width="0.1184%" height="15" fill="rgb(207,181,40)"/><text x="36.3115%" y="207.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`IGC::PSCodeGen(IGC::PixelShaderContext*, llvm::MapVector&lt;llvm::Function*, IGC::CShaderProgram*, llvm::DenseMap&lt;llvm::Function*, unsigned int, llvm::DenseMapInfo&lt;llvm::Function*&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, unsigned int&gt; &gt;, std::__1::vector&lt;std::__1::pair&lt;llvm::Function*, IGC::CShaderProgram*&gt;, std::__1::allocator&lt;std::__1::pair (13 samples, 0.12%)</title><rect x="36.0615%" y="181" width="0.1184%" height="15" fill="rgb(254,173,49)"/><text x="36.3115%" y="191.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`llvm::legacy::PassManagerImpl::run (11 samples, 0.10%)</title><rect x="36.0798%" y="165" width="0.1001%" height="15" fill="rgb(221,1,38)"/><text x="36.3298%" y="175.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`llvm::FPPassManager::runOnModule (11 samples, 0.10%)</title><rect x="36.0798%" y="149" width="0.1001%" height="15" fill="rgb(206,124,46)"/><text x="36.3298%" y="159.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`llvm::FPPassManager::runOnFunction (11 samples, 0.10%)</title><rect x="36.0798%" y="133" width="0.1001%" height="15" fill="rgb(249,21,11)"/><text x="36.3298%" y="143.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`USC::CompilePixelShaderOpenGL (20 samples, 0.18%)</title><rect x="36.0615%" y="261" width="0.1821%" height="15" fill="rgb(222,201,40)"/><text x="36.3115%" y="271.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`ILAdapter::TranslateILToLLVM (20 samples, 0.18%)</title><rect x="36.0615%" y="245" width="0.1821%" height="15" fill="rgb(235,61,29)"/><text x="36.3115%" y="255.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`void ILAdapter::CreateShader&lt;IGC::PixelShaderContext, USC::SCompilerOutputPixelShaderOpenGL_Gen9&gt; (20 samples, 0.18%)</title><rect x="36.0615%" y="229" width="0.1821%" height="15" fill="rgb(219,207,3)"/><text x="36.3115%" y="239.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`gpusLoadCurrentPipelinePrograms (26 samples, 0.24%)</title><rect x="36.0433%" y="309" width="0.2367%" height="15" fill="rgb(222,56,46)"/><text x="36.2933%" y="319.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`intelUpdateCtxSysProgramCommon(GLDContextRec*, GLDProgramRec*, GLDPipelineProgramRec*, void*, ShaderInfoCacheRec*, unsigned int) (25 samples, 0.23%)</title><rect x="36.0524%" y="293" width="0.2276%" height="15" fill="rgb(239,76,54)"/><text x="36.3024%" y="303.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`USC::IM_Shader::Compile (24 samples, 0.22%)</title><rect x="36.0615%" y="277" width="0.2185%" height="15" fill="rgb(231,124,27)"/><text x="36.3115%" y="287.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`updateDispatch (155 samples, 1.41%)</title><rect x="35.8886%" y="325" width="1.4111%" height="15" fill="rgb(249,195,6)"/><text x="36.1386%" y="335.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusLoadCurrentVertexArray (100 samples, 0.91%)</title><rect x="36.3893%" y="309" width="0.9104%" height="15" fill="rgb(237,174,47)"/><text x="36.6393%" y="319.50"></text></g><g><title>AppleIntelSKLGraphicsGLDriver`glrUpdateBuffer (77 samples, 0.70%)</title><rect x="36.5987%" y="293" width="0.7010%" height="15" fill="rgb(206,201,31)"/><text x="36.8487%" y="303.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusGetKernelBufferResource (75 samples, 0.68%)</title><rect x="36.6169%" y="277" width="0.6828%" height="15" fill="rgb(231,57,52)"/><text x="36.8669%" y="287.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (75 samples, 0.68%)</title><rect x="36.6169%" y="261" width="0.6828%" height="15" fill="rgb(248,177,22)"/><text x="36.8669%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (72 samples, 0.66%)</title><rect x="36.6442%" y="245" width="0.6555%" height="15" fill="rgb(215,211,37)"/><text x="36.8942%" y="255.50"></text></g><g><title>IOKit`io_connect_method (72 samples, 0.66%)</title><rect x="36.6442%" y="229" width="0.6555%" height="15" fill="rgb(241,128,51)"/><text x="36.8942%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (72 samples, 0.66%)</title><rect x="36.6442%" y="213" width="0.6555%" height="15" fill="rgb(227,165,31)"/><text x="36.8942%" y="223.50"></text></g><g><title>GLEngine`glDrawElements_GL3Exec (424 samples, 3.86%)</title><rect x="33.5124%" y="373" width="3.8602%" height="15" fill="rgb(228,167,24)"/><text x="33.7624%" y="383.50">GLEn..</text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (165 samples, 1.50%)</title><rect x="35.8704%" y="357" width="1.5022%" height="15" fill="rgb(228,143,12)"/><text x="36.1204%" y="367.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (163 samples, 1.48%)</title><rect x="35.8886%" y="341" width="1.4840%" height="15" fill="rgb(249,149,8)"/><text x="36.1386%" y="351.50"></text></g><g><title>GLEngine`glUniform2f_Exec (11 samples, 0.10%)</title><rect x="37.3999%" y="373" width="0.1001%" height="15" fill="rgb(243,35,44)"/><text x="37.6499%" y="383.50"></text></g><g><title>GLEngine`setUniform (11 samples, 0.10%)</title><rect x="37.3999%" y="357" width="0.1001%" height="15" fill="rgb(246,89,9)"/><text x="37.6499%" y="367.50"></text></g><g><title>GLEngine`glGetUniformLocationARB_Exec (30 samples, 0.27%)</title><rect x="37.7549%" y="357" width="0.2731%" height="15" fill="rgb(233,213,13)"/><text x="38.0049%" y="367.50"></text></g><g><title>libGLProgrammability.dylib`ShGetUniformLocation (27 samples, 0.25%)</title><rect x="37.7822%" y="341" width="0.2458%" height="15" fill="rgb(233,141,41)"/><text x="38.0322%" y="351.50"></text></g><g><title>libGLProgrammability.dylib`glpTypeParseDeref (22 samples, 0.20%)</title><rect x="37.8277%" y="325" width="0.2003%" height="15" fill="rgb(239,167,4)"/><text x="38.0777%" y="335.50"></text></g><g><title>roadrunner`roadrunner::render::shaders::program::ShaderProgram::set_uniform_v2 (51 samples, 0.46%)</title><rect x="37.7549%" y="373" width="0.4643%" height="15" fill="rgb(209,217,16)"/><text x="38.0049%" y="383.50"></text></g><g><title>roadrunner`roadrunner::render::renderer::chunk_renderer::ChunkRenderer::draw (575 samples, 5.23%)</title><rect x="33.0025%" y="389" width="5.2349%" height="15" fill="rgb(219,88,35)"/><text x="33.2525%" y="399.50">roadru..</text></g><g><title>roadrunner`roadrunner::game::game::Game::render (630 samples, 5.74%)</title><rect x="32.5291%" y="405" width="5.7356%" height="15" fill="rgb(220,193,23)"/><text x="32.7791%" y="415.50">roadrun..</text></g><g><title>roadrunner`hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (81 samples, 0.74%)</title><rect x="38.3285%" y="373" width="0.7374%" height="15" fill="rgb(230,90,52)"/><text x="38.5785%" y="383.50"></text></g><g><title>roadrunner`core::hash::impls::_&lt;impl core::hash::Hash for i64&gt;::hash (32 samples, 0.29%)</title><rect x="38.7746%" y="357" width="0.2913%" height="15" fill="rgb(252,106,19)"/><text x="39.0246%" y="367.50"></text></g><g><title>roadrunner`hashbrown::raw::RawTable&lt;T&gt;::insert (17 samples, 0.15%)</title><rect x="39.3299%" y="357" width="0.1548%" height="15" fill="rgb(206,74,20)"/><text x="39.5799%" y="367.50"></text></g><g><title>roadrunner`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (14 samples, 0.13%)</title><rect x="39.3572%" y="341" width="0.1275%" height="15" fill="rgb(230,138,44)"/><text x="39.6072%" y="351.50"></text></g><g><title>roadrunner`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (48 samples, 0.44%)</title><rect x="39.0659%" y="373" width="0.4370%" height="15" fill="rgb(235,182,43)"/><text x="39.3159%" y="383.50"></text></g><g><title>roadrunner`core::world::world::World::load_around (145 samples, 1.32%)</title><rect x="38.2647%" y="389" width="1.3201%" height="15" fill="rgb(242,16,51)"/><text x="38.5147%" y="399.50"></text></g><g><title>roadrunner`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (23 samples, 0.21%)</title><rect x="39.6213%" y="373" width="0.2094%" height="15" fill="rgb(248,9,4)"/><text x="39.8713%" y="383.50"></text></g><g><title>roadrunner`hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (23 samples, 0.21%)</title><rect x="39.6213%" y="357" width="0.2094%" height="15" fill="rgb(210,31,22)"/><text x="39.8713%" y="367.50"></text></g><g><title>roadrunner`core::chunk::chunk_group::ChunkGroup::get_block (72 samples, 0.66%)</title><rect x="39.8398%" y="373" width="0.6555%" height="15" fill="rgb(239,54,39)"/><text x="40.0898%" y="383.50"></text></g><g><title>roadrunner`hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (13 samples, 0.12%)</title><rect x="40.5044%" y="373" width="0.1184%" height="15" fill="rgb(230,99,41)"/><text x="40.7544%" y="383.50"></text></g><g><title>GLEngine`gleFreeBufferObject (13 samples, 0.12%)</title><rect x="40.9232%" y="309" width="0.1184%" height="15" fill="rgb(253,106,12)"/><text x="41.1732%" y="319.50"></text></g><g><title>GLEngine`gleUnbindAndFreeVertexArrayObject (17 samples, 0.15%)</title><rect x="40.9141%" y="325" width="0.1548%" height="15" fill="rgb(213,46,41)"/><text x="41.1641%" y="335.50"></text></g><g><title>GLEngine`glDeleteVertexArrays_Exec (19 samples, 0.17%)</title><rect x="40.9050%" y="341" width="0.1730%" height="15" fill="rgb(215,133,35)"/><text x="41.1550%" y="351.50"></text></g><g><title>roadrunner`hashbrown::map::HashMap&lt;K,V,S&gt;::retain (63 samples, 0.57%)</title><rect x="40.6318%" y="373" width="0.5736%" height="15" fill="rgb(213,28,5)"/><text x="40.8818%" y="383.50"></text></g><g><title>roadrunner`core::ptr::drop_in_place (38 samples, 0.35%)</title><rect x="40.8594%" y="357" width="0.3460%" height="15" fill="rgb(215,77,49)"/><text x="41.1094%" y="367.50"></text></g><g><title>roadrunner`hashbrown::map::make_hash (23 samples, 0.21%)</title><rect x="41.2054%" y="373" width="0.2094%" height="15" fill="rgb(248,100,22)"/><text x="41.4554%" y="383.50"></text></g><g><title>roadrunner`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (61 samples, 0.56%)</title><rect x="58.0208%" y="357" width="0.5554%" height="15" fill="rgb(208,67,9)"/><text x="58.2708%" y="367.50"></text></g><g><title>roadrunner`core::chunk::chunk_group::ChunkGroup::get_block (856 samples, 7.79%)</title><rect x="58.5761%" y="357" width="7.7932%" height="15" fill="rgb(219,133,21)"/><text x="58.8261%" y="367.50">roadrunner`..</text></g><g><title>roadrunner`hashbrown::map::make_hash (2,495 samples, 22.71%)</title><rect x="66.3693%" y="357" width="22.7149%" height="15" fill="rgb(246,46,29)"/><text x="66.6193%" y="367.50">roadrunner`hashbrown::map::make_hash</text></g><g><title>roadrunner`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (683 samples, 6.22%)</title><rect x="82.8660%" y="341" width="6.2181%" height="15" fill="rgb(246,185,52)"/><text x="83.1160%" y="351.50">roadrunn..</text></g><g><title>roadrunner`&lt;math::vector::vector3::Vector3 as core::ops::arith::Add&gt;::add (37 samples, 0.34%)</title><rect x="92.0794%" y="341" width="0.3369%" height="15" fill="rgb(252,136,11)"/><text x="92.3294%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (12 samples, 0.11%)</title><rect x="92.7986%" y="261" width="0.1092%" height="15" fill="rgb(219,138,53)"/><text x="93.0486%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.24%)</title><rect x="92.7167%" y="277" width="0.2367%" height="15" fill="rgb(211,51,23)"/><text x="92.9667%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (156 samples, 1.42%)</title><rect x="92.5164%" y="293" width="1.4202%" height="15" fill="rgb(247,221,28)"/><text x="92.7664%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (105 samples, 0.96%)</title><rect x="92.9807%" y="277" width="0.9559%" height="15" fill="rgb(251,222,45)"/><text x="93.2307%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (160 samples, 1.46%)</title><rect x="92.5073%" y="309" width="1.4567%" height="15" fill="rgb(217,162,53)"/><text x="92.7573%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (170 samples, 1.55%)</title><rect x="92.4618%" y="325" width="1.5477%" height="15" fill="rgb(229,93,14)"/><text x="92.7118%" y="335.50"></text></g><g><title>roadrunner`roadrunner::render::mesh::chunk_mesh::ChunkMesh::add_face (544 samples, 4.95%)</title><rect x="89.0841%" y="357" width="4.9527%" height="15" fill="rgb(209,67,49)"/><text x="89.3341%" y="367.50">roadru..</text></g><g><title>roadrunner`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (177 samples, 1.61%)</title><rect x="92.4253%" y="341" width="1.6114%" height="15" fill="rgb(213,87,29)"/><text x="92.6753%" y="351.50"></text></g><g><title>GLEngine`glBufferData_Exec (56 samples, 0.51%)</title><rect x="94.0823%" y="341" width="0.5098%" height="15" fill="rgb(205,151,52)"/><text x="94.3323%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (46 samples, 0.42%)</title><rect x="94.1733%" y="325" width="0.4188%" height="15" fill="rgb(253,215,39)"/><text x="94.4233%" y="335.50"></text></g><g><title>roadrunner`roadrunner::render::mesh::mesh::Mesh::add_vbo (64 samples, 0.58%)</title><rect x="94.0368%" y="357" width="0.5827%" height="15" fill="rgb(221,220,41)"/><text x="94.2868%" y="367.50"></text></g><g><title>GLEngine`glBindBuffer_Exec (15 samples, 0.14%)</title><rect x="94.6286%" y="341" width="0.1366%" height="15" fill="rgb(218,133,21)"/><text x="94.8786%" y="351.50"></text></g><g><title>GLEngine`gleBindBufferObject (15 samples, 0.14%)</title><rect x="94.6286%" y="325" width="0.1366%" height="15" fill="rgb(221,193,43)"/><text x="94.8786%" y="335.50"></text></g><g><title>GLEngine`glBindVertexArray_Exec (16 samples, 0.15%)</title><rect x="94.7651%" y="341" width="0.1457%" height="15" fill="rgb(240,128,52)"/><text x="95.0151%" y="351.50"></text></g><g><title>GLEngine`gleBindVertexArray (16 samples, 0.15%)</title><rect x="94.7651%" y="325" width="0.1457%" height="15" fill="rgb(253,114,12)"/><text x="95.0151%" y="335.50"></text></g><g><title>GLEngine`allocateWCMemory (28 samples, 0.25%)</title><rect x="94.9108%" y="309" width="0.2549%" height="15" fill="rgb(215,223,47)"/><text x="95.1608%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (28 samples, 0.25%)</title><rect x="94.9108%" y="293" width="0.2549%" height="15" fill="rgb(248,225,23)"/><text x="95.1608%" y="303.50"></text></g><g><title>GLEngine`gleAcquireBufferData (29 samples, 0.26%)</title><rect x="94.9108%" y="325" width="0.2640%" height="15" fill="rgb(250,108,0)"/><text x="95.1608%" y="335.50"></text></g><g><title>GLEngine`glBufferData_Exec (229 samples, 2.08%)</title><rect x="94.9108%" y="341" width="2.0849%" height="15" fill="rgb(228,208,7)"/><text x="95.1608%" y="351.50">G..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (200 samples, 1.82%)</title><rect x="95.1748%" y="325" width="1.8208%" height="15" fill="rgb(244,45,10)"/><text x="95.4248%" y="335.50">l..</text></g><g><title>roadrunner`roadrunner::render::mesh::chunk_mesh::ChunkMeshCollection::generate (6,113 samples, 55.65%)</title><rect x="41.4239%" y="373" width="55.6537%" height="15" fill="rgb(207,125,25)"/><text x="41.6739%" y="383.50">roadrunner`roadrunner::render::mesh::chunk_mesh::ChunkMeshCollection::generate</text></g><g><title>roadrunner`roadrunner::render::mesh::mesh::Mesh::new (270 samples, 2.46%)</title><rect x="94.6194%" y="357" width="2.4581%" height="15" fill="rgb(210,195,18)"/><text x="94.8694%" y="367.50">ro..</text></g><g><title>roadrunner`roadrunner::game::game::Game::update (6,461 samples, 58.82%)</title><rect x="38.2647%" y="405" width="58.8219%" height="15" fill="rgb(249,80,12)"/><text x="38.5147%" y="415.50">roadrunner`roadrunner::game::game::Game::update</text></g><g><title>roadrunner`roadrunner::render::renderer::chunk_renderer::ChunkRenderer::update (6,312 samples, 57.47%)</title><rect x="39.6213%" y="389" width="57.4654%" height="15" fill="rgb(221,65,9)"/><text x="39.8713%" y="399.50">roadrunner`roadrunner::render::renderer::chunk_renderer::ChunkRenderer::update</text></g><g><title>roadrunner`roadrunner::main::_{{closure}} (9,772 samples, 88.97%)</title><rect x="8.3030%" y="421" width="88.9658%" height="15" fill="rgb(235,49,36)"/><text x="8.5530%" y="431.50">roadrunner`roadrunner::main::_{{closure}}</text></g><g><title>roadrunner`std::time::Instant::elapsed (17 samples, 0.15%)</title><rect x="97.1140%" y="405" width="0.1548%" height="15" fill="rgb(225,32,20)"/><text x="97.3640%" y="415.50"></text></g><g><title>roadrunner`winit::platform_impl::platform::app_state::AppState::cleared (9,779 samples, 89.03%)</title><rect x="8.2484%" y="469" width="89.0295%" height="15" fill="rgb(215,141,46)"/><text x="8.4984%" y="479.50">roadrunner`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>roadrunner`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (9,776 samples, 89.00%)</title><rect x="8.2757%" y="453" width="89.0022%" height="15" fill="rgb(250,160,47)"/><text x="8.5257%" y="463.50">roadrunner`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>roadrunner`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (9,775 samples, 88.99%)</title><rect x="8.2848%" y="437" width="88.9931%" height="15" fill="rgb(216,222,40)"/><text x="8.5348%" y="447.50">roadrunner`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonus..</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (9,832 samples, 89.51%)</title><rect x="7.7749%" y="501" width="89.5120%" height="15" fill="rgb(234,217,39)"/><text x="8.0249%" y="511.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (9,832 samples, 89.51%)</title><rect x="7.7749%" y="485" width="89.5120%" height="15" fill="rgb(207,178,40)"/><text x="8.0249%" y="495.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (65 samples, 0.59%)</title><rect x="97.3507%" y="501" width="0.5918%" height="15" fill="rgb(221,136,13)"/><text x="97.6007%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (64 samples, 0.58%)</title><rect x="97.3598%" y="485" width="0.5827%" height="15" fill="rgb(249,199,10)"/><text x="97.6098%" y="495.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (9,936 samples, 90.46%)</title><rect x="7.6020%" y="517" width="90.4588%" height="15" fill="rgb(249,222,13)"/><text x="7.8520%" y="527.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (9,942 samples, 90.51%)</title><rect x="7.5564%" y="533" width="90.5135%" height="15" fill="rgb(244,185,38)"/><text x="7.8064%" y="543.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (9,958 samples, 90.66%)</title><rect x="7.5564%" y="549" width="90.6591%" height="15" fill="rgb(236,202,9)"/><text x="7.8064%" y="559.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (10,022 samples, 91.24%)</title><rect x="7.0011%" y="613" width="91.2418%" height="15" fill="rgb(250,229,37)"/><text x="7.2511%" y="623.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>AppKit`_DPSNextEvent (9,997 samples, 91.01%)</title><rect x="7.2287%" y="597" width="91.0142%" height="15" fill="rgb(206,174,23)"/><text x="7.4787%" y="607.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (9,993 samples, 90.98%)</title><rect x="7.2651%" y="581" width="90.9778%" height="15" fill="rgb(211,33,43)"/><text x="7.5151%" y="591.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (9,993 samples, 90.98%)</title><rect x="7.2651%" y="565" width="90.9778%" height="15" fill="rgb(245,58,50)"/><text x="7.5151%" y="575.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>libsystem_kernel.dylib`swtch_pri (24 samples, 0.22%)</title><rect x="98.3977%" y="197" width="0.2185%" height="15" fill="rgb(244,68,36)"/><text x="98.6477%" y="207.50"></text></g><g><title>roadrunner`core::utils::spin_sleep::sleep (33 samples, 0.30%)</title><rect x="98.3886%" y="213" width="0.3004%" height="15" fill="rgb(232,229,15)"/><text x="98.6386%" y="223.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (49 samples, 0.45%)</title><rect x="98.3886%" y="309" width="0.4461%" height="15" fill="rgb(254,30,23)"/><text x="98.6386%" y="319.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (49 samples, 0.45%)</title><rect x="98.3886%" y="293" width="0.4461%" height="15" fill="rgb(235,160,14)"/><text x="98.6386%" y="303.50"></text></g><g><title>roadrunner`winit::platform_impl::platform::app_state::AppState::cleared (49 samples, 0.45%)</title><rect x="98.3886%" y="277" width="0.4461%" height="15" fill="rgb(212,155,44)"/><text x="98.6386%" y="287.50"></text></g><g><title>roadrunner`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (49 samples, 0.45%)</title><rect x="98.3886%" y="261" width="0.4461%" height="15" fill="rgb(226,2,50)"/><text x="98.6386%" y="271.50"></text></g><g><title>roadrunner`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (49 samples, 0.45%)</title><rect x="98.3886%" y="245" width="0.4461%" height="15" fill="rgb(234,177,6)"/><text x="98.6386%" y="255.50"></text></g><g><title>roadrunner`roadrunner::main::_{{closure}} (49 samples, 0.45%)</title><rect x="98.3886%" y="229" width="0.4461%" height="15" fill="rgb(217,24,9)"/><text x="98.6386%" y="239.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (50 samples, 0.46%)</title><rect x="98.3886%" y="437" width="0.4552%" height="15" fill="rgb(220,13,46)"/><text x="98.6386%" y="447.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (50 samples, 0.46%)</title><rect x="98.3886%" y="421" width="0.4552%" height="15" fill="rgb(239,221,27)"/><text x="98.6386%" y="431.50"></text></g><g><title>AppKit`_DPSNextEvent (50 samples, 0.46%)</title><rect x="98.3886%" y="405" width="0.4552%" height="15" fill="rgb(222,198,25)"/><text x="98.6386%" y="415.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (50 samples, 0.46%)</title><rect x="98.3886%" y="389" width="0.4552%" height="15" fill="rgb(211,99,13)"/><text x="98.6386%" y="399.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (50 samples, 0.46%)</title><rect x="98.3886%" y="373" width="0.4552%" height="15" fill="rgb(232,111,31)"/><text x="98.6386%" y="383.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (50 samples, 0.46%)</title><rect x="98.3886%" y="357" width="0.4552%" height="15" fill="rgb(245,82,37)"/><text x="98.6386%" y="367.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (50 samples, 0.46%)</title><rect x="98.3886%" y="341" width="0.4552%" height="15" fill="rgb(227,149,46)"/><text x="98.6386%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (50 samples, 0.46%)</title><rect x="98.3886%" y="325" width="0.4552%" height="15" fill="rgb(218,36,50)"/><text x="98.6386%" y="335.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (51 samples, 0.46%)</title><rect x="98.3886%" y="549" width="0.4643%" height="15" fill="rgb(226,80,48)"/><text x="98.6386%" y="559.50"></text></g><g><title>AppKit`-[_NSThemeWidget mouseDown:] (51 samples, 0.46%)</title><rect x="98.3886%" y="533" width="0.4643%" height="15" fill="rgb(238,224,15)"/><text x="98.6386%" y="543.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (51 samples, 0.46%)</title><rect x="98.3886%" y="517" width="0.4643%" height="15" fill="rgb(241,136,10)"/><text x="98.6386%" y="527.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (51 samples, 0.46%)</title><rect x="98.3886%" y="501" width="0.4643%" height="15" fill="rgb(208,32,45)"/><text x="98.6386%" y="511.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (51 samples, 0.46%)</title><rect x="98.3886%" y="485" width="0.4643%" height="15" fill="rgb(207,135,9)"/><text x="98.6386%" y="495.50"></text></g><g><title>AppKit`NSControlTrackMouse (51 samples, 0.46%)</title><rect x="98.3886%" y="469" width="0.4643%" height="15" fill="rgb(206,86,44)"/><text x="98.6386%" y="479.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (51 samples, 0.46%)</title><rect x="98.3886%" y="453" width="0.4643%" height="15" fill="rgb(245,177,15)"/><text x="98.6386%" y="463.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (55 samples, 0.50%)</title><rect x="98.3613%" y="581" width="0.5007%" height="15" fill="rgb(206,64,50)"/><text x="98.6113%" y="591.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (55 samples, 0.50%)</title><rect x="98.3613%" y="565" width="0.5007%" height="15" fill="rgb(234,36,40)"/><text x="98.6113%" y="575.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (69 samples, 0.63%)</title><rect x="98.2429%" y="597" width="0.6282%" height="15" fill="rgb(213,64,8)"/><text x="98.4929%" y="607.50"></text></g><g><title>AppKit`-[NSApplication run] (10,094 samples, 91.90%)</title><rect x="6.9920%" y="629" width="91.8973%" height="15" fill="rgb(210,75,36)"/><text x="7.2420%" y="639.50">AppKit`-[NSApplication run]</text></g><g><title>roadrunner`winit::platform_impl::platform::app::send_event (71 samples, 0.65%)</title><rect x="98.2429%" y="613" width="0.6464%" height="15" fill="rgb(229,88,21)"/><text x="98.4929%" y="623.50"></text></g><g><title>roadrunner`std::process::exit (71 samples, 0.65%)</title><rect x="98.8893%" y="629" width="0.6464%" height="15" fill="rgb(252,204,47)"/><text x="99.1393%" y="639.50"></text></g><g><title>roadrunner`std::sys::unix::os::exit (71 samples, 0.65%)</title><rect x="98.8893%" y="613" width="0.6464%" height="15" fill="rgb(208,77,27)"/><text x="99.1393%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__exit (71 samples, 0.65%)</title><rect x="98.8893%" y="597" width="0.6464%" height="15" fill="rgb(221,76,26)"/><text x="99.1393%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_large (15 samples, 0.14%)</title><rect x="99.5539%" y="549" width="0.1366%" height="15" fill="rgb(225,139,18)"/><text x="99.8039%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (15 samples, 0.14%)</title><rect x="99.5539%" y="533" width="0.1366%" height="15" fill="rgb(230,137,11)"/><text x="99.8039%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (15 samples, 0.14%)</title><rect x="99.5539%" y="517" width="0.1366%" height="15" fill="rgb(212,28,1)"/><text x="99.8039%" y="527.50"></text></g><g><title>GLEngine`glDeleteVertexArrays_Exec (13 samples, 0.12%)</title><rect x="99.7087%" y="533" width="0.1184%" height="15" fill="rgb(248,164,17)"/><text x="99.9587%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_large (15 samples, 0.14%)</title><rect x="99.8361%" y="533" width="0.1366%" height="15" fill="rgb(222,171,42)"/><text x="100.0861%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (15 samples, 0.14%)</title><rect x="99.8361%" y="517" width="0.1366%" height="15" fill="rgb(243,84,45)"/><text x="100.0861%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (15 samples, 0.14%)</title><rect x="99.8361%" y="501" width="0.1366%" height="15" fill="rgb(252,49,23)"/><text x="100.0861%" y="511.50"></text></g><g><title>roadrunner`winit::event_loop::EventLoop&lt;T&gt;::run (10,215 samples, 93.00%)</title><rect x="6.9920%" y="661" width="92.9989%" height="15" fill="rgb(215,19,7)"/><text x="7.2420%" y="671.50">roadrunner`winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>roadrunner`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (10,215 samples, 93.00%)</title><rect x="6.9920%" y="645" width="92.9989%" height="15" fill="rgb(238,81,41)"/><text x="7.2420%" y="655.50">roadrunner`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>roadrunner`winit::platform_impl::platform::app_state::AppState::exit (50 samples, 0.46%)</title><rect x="99.5357%" y="629" width="0.4552%" height="15" fill="rgb(210,199,37)"/><text x="99.7857%" y="639.50"></text></g><g><title>roadrunner`core::ptr::drop_in_place (50 samples, 0.46%)</title><rect x="99.5357%" y="613" width="0.4552%" height="15" fill="rgb(244,192,49)"/><text x="99.7857%" y="623.50"></text></g><g><title>roadrunner`core::ptr::drop_in_place (50 samples, 0.46%)</title><rect x="99.5357%" y="597" width="0.4552%" height="15" fill="rgb(226,211,11)"/><text x="99.7857%" y="607.50"></text></g><g><title>roadrunner`core::ptr::drop_in_place (49 samples, 0.45%)</title><rect x="99.5448%" y="581" width="0.4461%" height="15" fill="rgb(236,162,54)"/><text x="99.7948%" y="591.50"></text></g><g><title>roadrunner`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.45%)</title><rect x="99.5448%" y="565" width="0.4461%" height="15" fill="rgb(220,229,9)"/><text x="99.7948%" y="575.50"></text></g><g><title>roadrunner`core::ptr::drop_in_place (33 samples, 0.30%)</title><rect x="99.6905%" y="549" width="0.3004%" height="15" fill="rgb(250,87,22)"/><text x="99.9405%" y="559.50"></text></g><g><title>all (10,984 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(239,43,17)"/><text x="0.2500%" y="815.50"></text></g><g><title>roadrunner`0x1 (10,322 samples, 93.97%)</title><rect x="6.0269%" y="789" width="93.9731%" height="15" fill="rgb(231,177,25)"/><text x="6.2769%" y="799.50">roadrunner`0x1</text></g><g><title>libdyld.dylib`start (10,322 samples, 93.97%)</title><rect x="6.0269%" y="773" width="93.9731%" height="15" fill="rgb(219,179,1)"/><text x="6.2769%" y="783.50">libdyld.dylib`start</text></g><g><title>roadrunner`main (10,322 samples, 93.97%)</title><rect x="6.0269%" y="757" width="93.9731%" height="15" fill="rgb(238,219,53)"/><text x="6.2769%" y="767.50">roadrunner`main</text></g><g><title>roadrunner`std::rt::lang_start_internal (10,322 samples, 93.97%)</title><rect x="6.0269%" y="741" width="93.9731%" height="15" fill="rgb(232,167,36)"/><text x="6.2769%" y="751.50">roadrunner`std::rt::lang_start_internal</text></g><g><title>roadrunner`__rust_maybe_catch_panic (10,322 samples, 93.97%)</title><rect x="6.0269%" y="725" width="93.9731%" height="15" fill="rgb(244,19,51)"/><text x="6.2769%" y="735.50">roadrunner`__rust_maybe_catch_panic</text></g><g><title>roadrunner`std::panicking::try::do_call (10,322 samples, 93.97%)</title><rect x="6.0269%" y="709" width="93.9731%" height="15" fill="rgb(224,6,22)"/><text x="6.2769%" y="719.50">roadrunner`std::panicking::try::do_call</text></g><g><title>roadrunner`std::rt::lang_start::_{{closure}} (10,322 samples, 93.97%)</title><rect x="6.0269%" y="693" width="93.9731%" height="15" fill="rgb(224,145,5)"/><text x="6.2769%" y="703.50">roadrunner`std::rt::lang_start::_{{closure}}</text></g><g><title>roadrunner`roadrunner::main (10,322 samples, 93.97%)</title><rect x="6.0269%" y="677" width="93.9731%" height="15" fill="rgb(234,130,49)"/><text x="6.2769%" y="687.50">roadrunner`roadrunner::main</text></g></svg></svg>